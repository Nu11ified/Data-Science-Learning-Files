knitr::opts_chunk$set(echo = TRUE)
covid <- read.csv(file="dat/CDPHE_COVID19_Wastewater_Dashboard_Data.csv", header=T)
View(covid)
library(tidyverse)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
detach("package:dplyr", unload = TRUE)
library(tidyverse)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
install.packages(c("bit", "bslib", "class", "cli", "cluster", "commonmark", "cpp11", "curl", "fields", "foreign", "httr2", "jsonlite", "KernSmooth", "knitr", "MASS", "Matrix", "mime", "nlme", "nnet", "openssl", "processx", "ps", "purrr", "R6", "readxl", "rlang", "rpart", "sessioninfo", "spatial", "spatstat.data", "spatstat.explore", "spatstat.geom", "spatstat.random", "spatstat.univar", "spatstat.utils", "survival", "systemfonts", "textshaping", "tinytex", "tzdb", "xfun", "xml2", "zip"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
library(tidyverse)
colnames(covid)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
library(tidyverse)
colnames(covid)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
covid_df %>%
mutate(sars_rna_copies = log(sars_rna_copies),
new_covid_cases = log(new_covid_cases)) %>%
ggplot(aes(x = sars_rna_copies, y = new_covid_cases)) +
geom_point(alpha = 0.8) +
xlab("log(SARS-CoV-2 Copies/L)") +
ylab("log(New Covid-19 Cases)") +
ggtitle("All Utilities:  Wastewater RNA vs COVID-19 Cases") +
theme_bw()
#m <- lm(log(covid_df$new_covid_cases)~log(covid_df$sars_rna_copies + 1))
#p + geom_abline(intercept = coef(m)[1], slope = coef(m)[2])
# Enhanced original plot with regression
covid_df %>%
mutate(log_rna = log(sars_rna_copies),
log_cases = log(new_covid_cases)) %>%
ggplot(aes(x = log_rna, y = log_cases)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(x = "log(SARS-CoV-2 Copies/L)", y = "log(New COVID-19 Cases)",
title = "Strong Positive Correlation Between RNA Levels and Cases",
subtitle = "With 95% Confidence Interval") +
theme_bw()
# Load spatial data and compute correlations
load("dat/spatialCovid.RData") # Contains covid_lat_longs
covid_cor <- covid_df %>%
mutate(log_rna = log(sars_rna_copies),
log_cases = log(new_covid_cases)) %>%
group_by(Utility) %>%
summarise(correlation = cor(log_rna, log_cases, use = "complete.obs"),
observations = n()) %>%
left_join(covid_lat_longs, by = "Utility")
# Get Colorado base map
library(ggmap)
co_map <- get_stamenmap(bbox = c(left = -109.1, bottom = 36.9, right = -102, top = 41.1),
zoom = 7, maptype = "toner-lite")
m(list = ls())
rm(list = ls())
covid <- read.csv(file="dat/CDPHE_COVID19_Wastewater_Dashboard_Data.csv", header=T)
library(tidyverse)
colnames(covid)
covid %>%
select(-ObjectId) %>%
rename(sars_rna_copies = SARS_CoV_2_copies_L,
new_covid_cases = Number_of_New_COVID19_Cases_by_) %>%
filter(is.na(sars_rna_copies)==FALSE & new_covid_cases>=5)  -> covid_df
covid_df %>%
mutate(sars_rna_copies = log(sars_rna_copies),
new_covid_cases = log(new_covid_cases)) %>%
ggplot(aes(x = sars_rna_copies, y = new_covid_cases)) +
geom_point(alpha = 0.8) +
xlab("log(SARS-CoV-2 Copies/L)") +
ylab("log(New Covid-19 Cases)") +
ggtitle("All Utilities:  Wastewater RNA vs COVID-19 Cases") +
theme_bw()
#m <- lm(log(covid_df$new_covid_cases)~log(covid_df$sars_rna_copies + 1))
#p + geom_abline(intercept = coef(m)[1], slope = coef(m)[2])
library(ggmap)
#ggmap::register_google("")
tot_covid <- as.data.frame(aggregate(new_covid_cases ~ Utility, covid_df, sum))
#create df for geocoding
addr_df <- data.frame(
Utility = paste(unique(covid$Utility), rep(", CO", 22))) #add any helpful geographic info
#covid_lat_longs <- ggmap::geocode(addr_df$Utility, lat = latitude, lon = longitude)
load("dat/spatialCovid.RData")
covid_lat_longs$Utility <- unique(covid$Utility)
merged_df <- merge(covid_lat_longs, tot_covid, by = "Utility", all = TRUE)
#merged_df <- merge(covid_lat_longs, tot_covid, by.x = "UtilityinLatLon", by.y = "Utlity", all = TRUE)
#co <- qmap("Colorado, USA", zoom = 8, color = "bw")#how to pull map tile
co +
geom_point(aes(x = lon, y = lat, color = 'red', size = new_covid_cases), data = merged_df)
# Scatter plot with regression line and time color
support_plot <- covid_df %>%
mutate(sars_rna_copies = log(sars_rna_copies),
new_covid_cases = log(new_covid_cases)) %>%
ggplot(aes(x = sars_rna_copies, y = new_covid_cases, color = Date)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "log(SARS-CoV-2 Copies/L)",
y = "log(New Covid-19 Cases)",
title = "Wastewater RNA vs. COVID-19 Cases Over Time",
color = "Date") +
theme_bw()
print(support_plot)
# Calculate correlation coefficient
correlation <- covid_df %>%
mutate(sars_rna_copies = log(sars_rna_copies),
new_covid_cases = log(new_covid_cases)) %>%
summarize(correlation = cor(sars_rna_copies, new_covid_cases))
print(paste("Correlation Coefficient:", round(correlation$correlation, 3)))
#Time series plot
time_series_plot <- covid_df %>%
ggplot(aes(x = Date)) +
geom_line(aes(y = sars_rna_copies, color = "RNA Copies")) +
geom_line(aes(y = new_covid_cases, color = "New Cases")) +
labs(title = "Wastewater RNA and New Cases Over Time",
y = "Value") +
theme_bw() +
scale_y_log10()
print(time_series_plot)
library(tidyverse)
# Create enhanced visualization
covid_df %>%
mutate(
log_sars = log(sars_rna_copies),
log_cases = log(new_covid_cases)
) %>%
ggplot(aes(x = log_sars, y = log_cases)) +
geom_point(aes(color = Utility), alpha = 0.7) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
title = "Strong Correlation Between Wastewater RNA and COVID-19 Cases",
subtitle = "Data from Colorado utilities demonstrates predictive power",
x = "Log(SARS-CoV-2 RNA Copies/L in Wastewater)",
y = "Log(New COVID-19 Cases)",
caption = "Source: Colorado Department of Public Health and Environment"
) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(color = "gray40")
)
library(tidyverse)
# Create enhanced visualization
covid_df %>%
mutate(
log_sars = log(sars_rna_copies),
log_cases = log(new_covid_cases)
) %>%
ggplot(aes(x = log_sars, y = log_cases)) +
geom_point(aes(color = Utility), alpha = 0.7) +
geom_smooth(method = "lm", color = "black", linetype = "dashed") +
labs(
title = "Strong Correlation Between Wastewater RNA and COVID-19 Cases",
subtitle = "Data from Colorado utilities demonstrates predictive power",
x = "Log(SARS-CoV-2 RNA Copies/L in Wastewater)",
y = "Log(New COVID-19 Cases)",
) +
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.subtitle = element_text(color = "gray40")
)

knitr::opts_chunk$set(echo = TRUE)
load("dat/boulder_ammonia.rda")
jan1_data <- subset(boulder_ammonia, format(datetime, "%Y-%m-%d") == "2019-01-01")
knitr::opts_chunk$set(echo = TRUE)
load("dat/boulder_ammonia.rda")
jan1_data <- subset(boulder_ammonia, format(datetime, "%Y-%m-%d") == "2019-01-01")
library(lubridate)
jan1_data <- subset(boulder_ammonia, format(datetime, "%Y-%m-%d") == "2019-01-01")
jan1_data <- subset(boulder_ammonia, as.Date(date) == as.Date("2019-01-01"))
first_day_data <- boulder_ammonia[boulder_ammonia$date == min(boulder_ammonia$date), ]
first_ammonia <- first_day_data$ammonia[1]
last_ammonia <- first_day_data$ammonia[nrow(first_day_data)]
if (first_ammonia > last_ammonia) {
print("Ammonia was higher at the beginning of the day")
} else {
print("Ammonia was higher at the end of the day")
}
View(boulder_ammonia)
jan1_data <- subset(boulder_ammonia, format(date.time, "%Y-%m-%d") == "2019-01-01")
jan1_data <- subset(boulder_ammonia, format(Date.Time, "%Y-%m-%d") == "2019-01-01")
first_ammonia <- jan1_data$ammonia[1]
last_ammonia <- jan1_data$ammonia[nrow(jan1_data)]
if (first_ammonia > last_ammonia) {
print("Ammonia was higher at the beginning of the day")
} else {
print("Ammonia was higher at the end of the day")
}
knitr::opts_chunk$set(echo = TRUE)
load("dat/boulder_ammonia.rda")
jan1_data <- subset(boulder_ammonia, format(Date.Time, "%Y-%m-%d") == "2019-01-01")
first_ammonia <- jan1_data$ammonia[1]
last_ammonia <- jan1_data$ammonia[nrow(jan1_data)]
if (first_ammonia > last_ammonia) {
print("Ammonia was higher at the beginning of the day")
} else {
print("Ammonia was higher at the end of the day")
}
jan1_data <- subset(boulder_ammonia, format(Date.Time, "%Y-%m-%d") == "2019-01-01")
last_measurement <- jan1_data$ammonia[nrow(jan1_data)]
quants <- quantile(boulder_ammonia$ammonia)
if (last_measurement <= quants[2]) {
print("Ammonia level is within the first quantile.")
} else if (last_measurement <= quants[3]) {
print("Ammonia level is within the second quantile.")
} else if (last_measurement <= quants[4]) {
print("Ammonia level is within the third quantile.")
} else {
print("Ammonia level is within the fourth quantile.")
}
rbind(<old existing object>, <new object to be added>)
low_ammonia <- boulder_ammonia[1, ]
i <- 2
while(boulder_ammonia$ammonia[i] <= 12) {
low_ammonia <- rbind(low_ammonia, boulder_ammonia[i, ])
i <- i + 1
}
View(low_ammonia)
jan1_data <- subset(boulder_ammonia, format(Date.Time, "%Y-%m-%d") == "2019-01-01")
# Check if we have data
if(nrow(jan1_data) > 0) {
first_ammonia <- jan1_data$ammonia[1]
last_ammonia <- jan1_data$ammonia[nrow(jan1_data)]
if (first_ammonia > last_ammonia) {
print("Ammonia was higher at the beginning of the day")
} else {
print("Ammonia was higher at the end of the day")
}
} else {
print("No data found for January 1, 2019")
}
load("dat/boulder_ammonia.rda")
libary(mowateR)
library(mowateR)
load("dat/boulder_ammonia.rda")
library(mowateR)
library(lubridate)
all_days <- day(boulder_ammonia$Date.Time)
all_months <- month(boulder_ammonia$Date.Time)
first_day <- which(all_days == 1 & all_months == 1)
head(first_day)
tail(first_day)
boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[1]
boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[278]
library(lubridate)
all_days <- day(boulder_ammonia$Date.Time)
all_months <- month(boulder_ammonia$Date.Time)
first_day <- which(all_days == 1 & all_months == 1)
head(first_day)
tail(first_day)
boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[1]
boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[278]
if(boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[1] > boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[278]) {
print("Ammonia was higher at the beginning of the day.")
} else {
print("Ammonia was higher at the end of the day.")
}
last_ammonia_Jan1 <- boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[278]
ammonia_quantiles <- quantile(boulder_ammonia$AB3.Z7.Ammonia.mg.N.L, probs = c(0.25, 0.5, 0.75))
if (last_ammonia_Jan1 < ammonia_quantiles[1]) {
print("Ammonia level is within the first quantile.")
} else if (last_ammonia_Jan1 < ammonia_quantiles[1] & last_ammonia_Jan1 < ammonia_quantiles[2]) {
print("Ammonia level is within the second quantile.")
} else if (last_ammonia_Jan1 > ammonia_quantiles[2] & last_ammonia_Jan1 < ammonia_quantiles[3]) {
print("Ammonia level is within the third quantile.")
} else {
print("Ammonia level is within the fourth quantile.")
}
last_ammonia_Jan1 <- boulder_ammonia$AB3.Z7.Ammonia.mg.N.L[278]
ammonia_quantiles <- quantile(boulder_ammonia$AB3.Z7.Ammonia.mg.N.L, probs = c(0.25, 0.5, 0.75))
if (last_ammonia_Jan1 < ammonia_quantiles[1]) {
print("Ammonia level is within the first quantile.")
} else if (last_ammonia_Jan1 < ammonia_quantiles[2]) {
print("Ammonia level is within the second quantile.")
} else if (last_ammonia_Jan1 < ammonia_quantiles[3]) {
print("Ammonia level is within the third quantile.")
} else {
print("Ammonia level is within the fourth quantile.")
}
low_ammonia <- boilder_ammonia[1,]
for(i in 1:6) {
for(j in 1:4) {
print(paste("Row", i, "and column", j, "has a value of", mat[i,j]))
}
}
# Create a matrix
mat <- matrix(1:24, nrow = 6, ncol = 4)
for(i in 1:6) {
for(j in 1:4) {
print(paste("Row", i, "and column", j, "has a value of", mat[i,j]))
}
}
print("Row 1's total value is 40.")
for(i in 1:nrow(mat)) {
row_total <- sum(mat[i,])
print(paste("The total for row", i, "is", row_total))
}
for(i in 1:nrow(mat)) {
row_total <- sum(mat[i,])
print(paste("The total for row", i, "is", row_total))
if(row_total %% 2 == 0) {
print("The total is even.")
} else {
print("The total is odd.")
})
for(i in 1:nrow(mat)) {
row_total <- sum(mat[i,])
print(paste("The total for row", i, "is", row_total))
if(row_total %% 2 == 0) {
print("The total is even.")
} else {
print("The total is odd.")
}
}
evens <- 0
odds <- 0
for(i in 1:nrow(mat)) {
row_total <- sum(mat[i,])
print(paste("The total for row", i, "is", row_total))
if(row_total %% 2 == 0) {
evens <- evens + 1
} else {
odds <- odds + 1
}
}
paste ("The number of even sums is", evens)
paste("The number of odd sums is", odds)
